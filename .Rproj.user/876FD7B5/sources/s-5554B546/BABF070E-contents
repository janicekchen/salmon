library(sf)
library(sp)
library(dplyr)
library(htmltools)
library(tigris)
library(leaflet)
library(geosphere)
library(shiny)

# setting working directory
# setwd("Documents/MILK")

###### MAPPING BY STORE ######

## DATA WRANGLING ##
## Coop: 
coop_raw <- read.csv("data/storemap/coop_inventory_0302.csv") %>%
  slice(1:14) %>% # selecting non-empty rows and columns
  select(1:7)

coop_byplant <- coop_raw %>%
  mutate(brand_product = paste("<b>", Brand, "</b>", ":", Product)) %>% # concatenating brand and product
  group_by(plant_name = Plant.Name) %>%  # summarizing by plant name, adding necessary columns
  summarize(FIPS = first(FIPS), plant_code = first(Plant.Code), 
            prod = paste(brand_product, collapse = "<br>"),
            lon.origin = first(x), lat.origin = first(y)) %>%
  mutate(lon.dest = -72.280572, lat.dest = 43.698169) %>% # adding coordinates of supermarket
  st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE) # converting to sf object

## Hannafords:
hann_raw <- read.csv("data/storemap/hannaford_inventory_0429.csv") %>%
  slice(1:15)

hann_byplant <- hann_raw %>%
  mutate(brand_product = paste("<b>", Brand, "</b>", ":", Product)) %>% 
  group_by(plant_name = Plant.Name) %>% 
  summarize(FIPS = first(FIPS), plant_code = first(Plant.Code), 
            prod = paste(brand_product, collapse = "<br>"),
            lon.origin = first(x), lat.origin = first(y)) %>%
  mutate(lon.dest = -72.317093, lat.dest = 43.636247) %>% 
  st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE)

## Price Chopper:
pc_raw <- read.csv("data/storemap/pc_inventory_0429.csv") %>%
  slice(1:15) %>%
  select(1:7)

pc_byplant <- pc_raw %>%
  mutate(brand_product = paste("<b>", Brand, "</b>", ":", Product)) %>% 
  group_by(plant_name = Plant.Name) %>% 
  summarize(FIPS = first(FIPS), plant_code = first(Plant.Code), 
            prod = paste(brand_product, collapse = "<br>"),
            lon.origin = first(x), lat.origin = first(y)) %>%
  mutate(lon.dest = -72.287900, lat.dest = 43.637116) %>% 
  st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE)

## Walmart:
wm_raw <- read.csv("data/storemap/walmart_inventory_0302.csv")

wm_byplant <- wm_raw %>%
  mutate(brand_product = paste("<b>", Brand, "</b>", ":", Product)) %>% 
  group_by(plant_name = Plant.Name) %>% 
  summarize(FIPS = first(FIPS), plant_code = first(Plant.Code), 
            prod = paste(brand_product, collapse = "<br>"),
            lon.origin = first(x), lat.origin = first(y)) %>%
  mutate(lon.dest = -72.322565, lat.dest = 43.624478) %>% 
  st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE)
View(wm_byplant)

## Walgreens:
wg_raw <- read.csv("data/storemap/wg_inventory_0302.csv")

wg_byplant <- wg_raw %>%
  mutate(brand_product = paste("<b>", Brand, "</b>", ":", Product)) %>% 
  group_by(plant_name = Plant.Name) %>% 
  summarize(FIPS = first(FIPS), plant_code = first(Plant.Code), 
            prod = paste(brand_product, collapse = "<br>"),
            lon.origin = first(x), lat.origin = first(y)) %>%
  mutate(lon.dest = -72.320703, lat.dest = 43.630055) %>% 
  st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE)

## Ex-NH/VT Supermarkets:
ex_nhvt_raw <- read.csv("data/storemap/exnhvtmilk_inventory.csv")

ex_nhvt_byplant <- ex_nhvt_raw %>%
  mutate(brand_product = paste("<b>", brand, "</b>", ":", product)) %>%
  group_by(plant_name, lat.dest) %>%
  summarize(lon.dest = first(lon.dest), 
            FIPS = first(FIPS), 
            plant_code = first(plant_code),
            lat.origin = first(lat.origin),
            lon.origin = first(lon.origin),
            prod = paste(brand_product, collapse = "<br>")) %>%
  st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE)

## FLOWS ##
storeflow <- function(x) {
  gcIntermediate(as.data.frame(x)[, 7:8], as.data.frame(x)[, 5:6],
                 sp = TRUE, addStartEnd = TRUE)}

coop_flows <- storeflow(coop_byplant)
hann_flows <- storeflow(hann_byplant)
pc_flows <- storeflow(pc_byplant)
wg_flows <- storeflow(wg_byplant)
wm_flows <- storeflow(wm_byplant)
exnhvt_flows <- gcIntermediate(as.data.frame(ex_nhvt_byplant)[, c(7, 6)], as.data.frame(ex_nhvt_byplant)[, c(3, 2)],
                               sp = TRUE, addStartEnd = TRUE) # can't use function here, because I wrangled this data set differently


## LABELS ##
storelabel <- function(x) {
  paste0('<b><u>', x$plant_name, '</u></b>',
         '<br>',
         x$prod) %>%
    lapply(htmltools::HTML)
}

coop_labs <- storelabel(coop_byplant)
hann_labs <- storelabel(hann_byplant)
wg_labs <- storelabel(wg_byplant)
wm_labs <- storelabel(wm_byplant)
pc_labs <- storelabel(pc_byplant)
ex_nhvt_labs <- storelabel(ex_nhvt_byplant)

coop_labs <-
  paste0('<b><u>', coop_byplant$plant_name, '</u></b>',
         '<br>',
         coop_byplant$prod) %>%
  lapply(htmltools::HTML)

## CONTEXT ##
# readying data for a choropleth map showing milk production in pounds
# us_states <- states(cb = FALSE, resolution = "5m") %>% # downloading state boundaries from tigris package
#   st_as_sf() %>%
#   st_transform(4326)
# 
# 
# milklbs <- read.csv("data/milkprod_bylbs_2017.csv", colClasses = "character") %>%
#   select("State", STATEFP = "State.ANSI", "Value") %>%
#   left_join(us_states) %>%
#   select(1:3, 17) %>%
#   st_as_sf() %>%
#   st_transform(4326) %>%
#   filter(State != "ALASKA") %>% # removing Alaska
#   mutate(value_mil = as.numeric(Value) / 1000000) # adding a new column that shows production in million pounds
# 
# milklbs_value <- as.numeric(milklbs$value_mil)
# breaks <- quantile(milklbs$value_mil, c(1/5, 2/5, 3/5, 4/5), na.rm = TRUE) # finding quantile breaks
# 
# bins <- c(min(milklbs$value_mil), 190.6, 772.8, 2439.8, 5965.0, max(milklbs$value_mil)) # making bins 
# pal <- colorBin("BuPu", domain = milklbs$value_mil, bins = bins) # assigning a palette to bins

## MAPPING ! ##
# Formatting Map labels
hann_group <-
  "<span style='color: #e41a1c;'><b>Hannaford</b></span>" %>%
  lapply(htmltools::HTML)

coop_group <-
  "<span style='color: #377eb8;'><b>Coop</b></span>" %>%
  lapply(htmltools::HTML)

pc_group <-
  "<span style='color: #4daf4a;'><b>Price Chopper</b></span>" %>%
  lapply(htmltools::HTML)

wm_group <-
  "<span style='color: #984ea3;'><b>Walmart</b></span>" %>%
  lapply(htmltools::HTML)

wg_group <-
  "<span style='color: #ff7f00;'><b>Walgreens</b></span>" %>%
  lapply(htmltools::HTML)

# exnhvt_group <-
#   "<b>Ex-NHVT</b>" %>%
#   lapply(htmltools::HTML)

#storemap <-
leaflet() %>%
  addProviderTiles('CartoDB.Positron', group = "Base Map") %>%
  setView(-78, 42.623818, zoom = 6) %>% # zoom = 5 for full screen map, 3 for embed
  # CHOROPLETH #
  # addPolygons(
  #   fillColor = ~pal(as.numeric(value_mil)),
  #   weight = 0,
  #   opacity = 0.3,
  #   color = "white",
  #   fillOpacity = 0.3,
  #   group = "Milk Production by State") %>%
  # addLegend(pal = pal, values = ~as.numeric(Value), opacity = 0.7, title = "Milk Production in Million Lbs (2017)",
  #           position = "bottomright") %>%
  # HANNAFORD # 
  addPolylines(data = hann_flows, weight = 1, color = "#e41a1c", group = hann_group) %>%
  addCircles(data = hann_byplant, label = hann_labs, color = "#e41a1c", group = hann_group) %>%
  # COOP #
  addPolylines(data = coop_flows, weight = 1, color = "#377eb8", group = coop_group) %>%
  addCircles(data = coop_byplant, label = coop_labs, color = "#377eb8", group = coop_group) %>%
  # PRICE CHOPPER #
  addPolylines(data = pc_flows, weight = 1, color = "#4daf4a", group = pc_group) %>%
  addCircles(data = pc_byplant, label = pc_labs, color = "#4daf4a", group = pc_group) %>%
  # WALMART #
  addPolylines(data = wm_flows, weight = 1, color = "#984ea3", group = wm_group) %>%
  addCircles(data = wm_byplant, label = wm_labs, color = "#984ea3", group = wm_group) %>%
  # WALGREENS #
  addPolylines(data = wg_flows, weight = 1, color = "#ff7f00", group = wg_group) %>%
  addCircles(data = wg_byplant, label = wg_labs, color = "#ff7f00", group = wg_group) %>%
  # EX NHVT #
  # addPolylines(data = exnhvt_flows, weight = 1, color = "black", group = exnhvt_group) %>%
  # addCircles(data = ex_nhvt_byplant, label = ex_nhvt_labs, color = "black", group = exnhvt_group) %>%
  addLayersControl(
    baseGroups = c("Base Map"),
    overlayGroups = c(
                      hann_group,
                      coop_group,
                      pc_group,
                      wm_group,
                      wg_group),
    options = layersControlOptions(collapsed = TRUE, autoZIndex = FALSE))


###### MAPPING BY BRAND ######
## DATA WRANGLING ##
# loading .csv file with all local milk data
allmilk <- read.csv("data/aggregatemilk.csv")
View(allmilk)

extract_brand <- function(x) {
  allmilk %>%
    filter(Brand == as.character(x)) %>%
    group_by(FIPS, Plant.Code, lon.dest) %>%
    summarize(plant_name = first(Plant.Name),
              prod = paste(Product, sep = ","),
              supermarket = first(supermarket),
              lat.origin = first(lat.origin), lon.origin = first(lon.origin),
              lat.dest = first(lat.dest)) %>%
    st_as_sf(crs = 4326, coords = c("lon.origin", "lat.origin"), remove = FALSE)
}

boothbros <- extract_brand("Booth Brothers")
coop <- extract_brand("Coop")
fairlife <- extract_brand("Fairlife")
garelick <- extract_brand("Garelick")
greatvalue <- extract_brand("Great Value")
hannaford <- extract_brand("Hannaford")
hood <- extract_brand("Hood")
horizon <- extract_brand("Horizon Organic")
kimballbrook <- extract_brand("Kimball Brook")
maplehill <- extract_brand("Maple Hill")
mcnamara <- extract_brand("McNamara")
naturesplace <- extract_brand("Nature's Place")
organicvalley <- extract_brand("Organic Valley")
pc <- extract_brand("Price Chopper")
robie <- extract_brand("Robie Farm")
stonyfield <- extract_brand("Stonyfield")
strafford <- extract_brand("Strafford")


brand_flows <- function(x){
  gcIntermediate(as.data.frame(x)[, c(8, 7)], as.data.frame(x)[, c(3, 9)],
                 sp = TRUE, addStartEnd = TRUE)
}

boothbros_flows <- brand_flows(boothbros)
coopb_flows <- brand_flows(coop)
fairlife_flows <- brand_flows(fairlife)
garelick_flows <- brand_flows(garelick)
greatvalue_flows <- brand_flows(greatvalue)
hannaford_flows <- brand_flows(hannaford)
hood_flows <- brand_flows(hood)
horizon_flows <- brand_flows(horizon)
kimballbrook_flows <- brand_flows(kimballbrook)
maplehill_flows <- brand_flows(maplehill)
mcnamara_flows <- brand_flows(mcnamara)
naturesplace_flows <- brand_flows(naturesplace)
organicvalley_flows <- brand_flows(organicvalley)
pc_flows <- brand_flows(pc)
robie_flows <- brand_flows(robie)
stonyfield_flows <- brand_flows(stonyfield)
strafford_flows <- brand_flows(strafford)

## LABELS ##
brandlabel <- function(x) {
  paste0('<b><u>', x$plant_name, '</u></b>',
         '<br>',
         x$prod) %>%
    lapply(htmltools::HTML)
}

boothbros_labs <- brandlabel(boothbros)
coopb_labs <- brandlabel(coop)
fairlife_labs <- brandlabel(fairlife)
garelick_labs <- brandlabel(garelick)
greatvalue_labs <- brandlabel(greatvalue)
hannaford_labs <- brandlabel(hannaford)
hood_labs <- brandlabel(hood)
horizon_labs <- brandlabel(horizon)
kimballbrook_labs <- brandlabel(kimballbrook)
maplehill_labs <- brandlabel(maplehill)
mcnamara_labs <- brandlabel(mcnamara)
naturesplace_labs <- brandlabel(naturesplace)
organicvalley_labs <- brandlabel(organicvalley)
pc_labs <- brandlabel(pc)
robie_labs <- brandlabel(robie)
stonyfield_labs <- brandlabel(stonyfield)
strafford_labs <- brandlabel(strafford)


## MAPPING ##
leaflet(milklbs) %>%
  addProviderTiles('CartoDB.Positron', group = "Base Map") %>%
  setView(-90.683804, 42.623818, zoom = 5) %>%
  # CHOROPLETH #
  addPolygons(
    fillColor = ~pal(as.numeric(value_mil)),
    weight = 0,
    opacity = 0.3,
    color = "white",
    fillOpacity = 0.3,
    group = "Milk Production by State") %>%
  addLegend(pal = pal, values = ~as.numeric(Value), opacity = 0.7, title = "Milk Production in Million Lbs (2017)",
            position = "bottomright") %>%
  # BRAND #
  addPolylines(data = boothbros_flows, color = "#a6cee3", weight = 1.5, group = "Booth Brothers") %>%
  addCircles(data = boothbros, label = boothbros_labs, color = "#a6cee3", group = "Booth Brothers") %>%
  addPolylines(data = coopb_flows, color = "#1f78b4", weight = 1.5, group = "Coop (brand)") %>%
  addCircles(data = coop, label = coopb_labs, color = "#1f78b4", group = "Coop (brand)") %>%
  addPolylines(data = fairlife_flows, color = "#b2df8a", weight = 1.5, group = "Fairlife") %>%
  addCircles(data = fairlife, label = fairlife_labs, color = "#b2df8a", group = "Fairlife") %>%
  addPolylines(data = garelick_flows, color = "#33a02c", weight = 1.5, group = "Garelick") %>%
  addCircles(data = garelick, label = garelick_labs, color = "#33a02c", group = "Garelick") %>%
  addPolylines(data = greatvalue_flows, color = "#fb9a99", weight = 1.5, group = "Great Value") %>%
  addCircles(data = greatvalue, label = greatvalue_labs, color = "#fb9a99", group = "Great Value") %>%
  addPolylines(data = hannaford_flows, color = "#e31a1c", weight = 1.5, group = "Hannaford (brand)") %>%
  addCircles(data = hannaford, label = hannaford_labs, color = "#e31a1c", group = "Hannaford (brand)") %>%
  addPolylines(data = hood_flows, color = "#fdbf6f", weight = 1.5, group = "Hood") %>%
  addCircles(data = hood, label = hood_labs, color = "#fdbf6f", group = "Hood") %>%
  addPolylines(data = horizon_flows, color = "#ff7f00", weight = 1.5, group = "Horizon Organic") %>%
  addCircles(data = horizon, label = horizon_labs, color = "#ff7f00", group = "Horizon Organic") %>%
  addPolylines(data = maplehill_flows, color = "#cab2d6", weight = 1.5, group = "Maple Hill") %>%
  addCircles(data = maplehill, label = maplehill_labs, color = "#cab2d6", group = "Maple Hill") %>%
  addPolylines(data = mcnamara_flows, color = "#6a3d9a", weight = 1.5, group = "McNamara") %>%
  addCircles(data = mcnamara, label = mcnamara_labs, color = "#6a3d9a", group = "McNamara") %>%
  addPolylines(data = kimballbrook_flows, color = "#b15928", weight = 1.5, group = "Kimball Brook") %>%
  addCircles(data = kimballbrook, label = kimballbrook_labs, color = "#b15928", group = "Kimball Brook") %>%
  addPolylines(data = naturesplace_flows, color = "#1b9e77", weight = 1.5, group = "Nature's Place") %>%
  addCircles(data = naturesplace, label = naturesplace_labs, color = "#1b9e77", group = "Nature's Place") %>%
  addPolylines(data = organicvalley_flows, color = "#d95f02", weight = 1.5, group = "Organic Valley") %>%
  addCircles(data = organicvalley, label = organicvalley_labs, color = "#d95f02", group = "Organic Valley") %>%
  addPolylines(data = pc_flows, color = "#7570b3", weight = 1.5, group = "Price Chopper (brand)") %>%
  addCircles(data = pc, label = pc_labs, color = "#7570b3", group = "Price Chopper (brand)") %>%
  addPolylines(data = robie_flows, color = "#e7298a", weight = 1.5, group = "Robie Farms") %>%
  addCircles(data = robie, label = robie_labs, color = "#e7298a", group = "Robie Farms") %>%
  addPolylines(data = stonyfield_flows, color = "#66a61e", weight = 1.5, group = "Stonyfield") %>%
  addCircles(data = stonyfield, label = stonyfield_labs, color = "#66a61e", group = "Stonyfield") %>%
  addPolylines(data = strafford_flows, color = "#e6ab02", weight = 1.5, group = "Strafford") %>%
  addCircles(data = strafford, label = strafford_labs, color = "#e6ab02", group = "Strafford") %>%
  addLayersControl(
    baseGroups = c("Base Map"),
    overlayGroups = c("Milk Production by State",
                      "Booth Brothers",
                      "Coop (brand)",
                      "Fairlife",
                      "Garelick",
                      "Great Value",
                      "Hannaford (brand)",
                      "Hood",
                      "Horizon Organic",
                      "Kimball Brook",
                      "Maple Hill",
                      "McNamara",
                      "Nature's Place",
                      "Organic Valley",
                      "Price Chopper (brand)",
                      "Robie Farms",
                      "Stonyfield",
                      "Strafford"),
    options = layersControlOptions(collapsed = TRUE)) %>%
  hideGroup(c("Milk Production by State", # hiding all groups, because it would be challenging for the user to unclick all of them 
              "Booth Brothers",
              "Coop (brand)",
              "Fairlife",
              "Garelick",
              "Great Value",
              "Hannaford (brand)",
              "Hood",
              "Horizon Organic",
              "Kimball Brook",
              "Maple Hill",
              "McNamara",
              "Nature's Place",
              "Organic Valley",
              "Price Chopper (brand)",
              "Robie Farms",
              "Stonyfield",
              "Strafford"))


# plantwrangle <- function(store) {
#   store_raw %>%
#     mutate(brand_product = paste("<b>", Brand, "</b>", ":", Product)) %>%
#     group_by(plant_name = Plant.Name) %>%
#     summarize(FIPS = first(FIPS), plant_code = first(Plant.Code),
#               prod = paste(brand_product, sep = "<br>"),
#               lon.origin = first(x), lat.origin = first(y)) %>%
#     mutate(lon.dest = "store_coords"[, 1], lat.dest = "store_coords"[, 2]) %>%
#     st_as_sf(coords = c("lon.origin", "lat.origin"), remove = FALSE)
# }
# 
# test <- plantwrangle(coop)

